<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Chris Abrams]]></title>
  <link href="http://chrisabrams.com/atom.xml" rel="self"/>
  <link href="http://chrisabrams.com/"/>
  <updated>2012-07-04T23:31:55-07:00</updated>
  <id>http://chrisabrams.com/</id>
  <author>
    <name><![CDATA[Chris Abrams]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript: Breaks with Lables]]></title>
    <link href="http://chrisabrams.com/blog/2012/07/04/javascript-breaks-with-lables/"/>
    <updated>2012-07-04T22:41:00-07:00</updated>
    <id>http://chrisabrams.com/blog/2012/07/04/javascript-breaks-with-lables</id>
    <content type="html"><![CDATA[<p>Breaks are a handy feature in Javascript and we&#8217;ll explore an under-utilized trick: break labels.</p>

<!-- more -->


<h2>What are breaks?</h2>

<p>Break statements break loops and move onto the next body of code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//loop body</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//next body of code</span>
</span></code></pre></td></tr></table></div></figure>


<p>When i == 2 the loop breaks out to the next body of code.</p>

<h2>What are labels?</h2>

<p>In Javascript, any statement can be labeled:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">identifier</span><span class="o">:</span> <span class="nx">statement</span>
</span></code></pre></td></tr></table></div></figure>


<p>For example, an if statement can be labeled:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">movies</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;Kill Bill&quot;</span><span class="p">,</span> <span class="s2">&quot;Zoolander&quot;</span><span class="p">,</span> <span class="s2">&quot;Anchorman&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nx">is_zoolander</span><span class="o">:</span> <span class="k">if</span><span class="p">(</span><span class="nx">movies</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//code logic here</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>When to use break labels</h2>

<p>Break labels are handy to loop through data and get out once you&#8217;ve gotten what you needed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">movies</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;Kill Bill&quot;</span><span class="p">,</span> <span class="s2">&quot;Zoolander&quot;</span><span class="p">,</span> <span class="s2">&quot;Anchorman&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nx">is_zoolander</span><span class="o">:</span> <span class="k">if</span><span class="p">(</span><span class="nx">movies</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">movies</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">movies</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">===</span> <span class="s2">&quot;Zoolander&quot;</span><span class="p">)</span> <span class="k">break</span> <span class="nx">is_zoolander</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//This statement would not run once the break statement was called</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">movies</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&quot; is not what you are looking for.&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>If statement</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">auth</span> <span class="o">=</span> <span class="s2">&quot;sdf8sdfskn3jknfsd8sdyfsdfsdf9sdfn&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">is_auth</span><span class="o">:</span> <span class="k">if</span><span class="p">(</span><span class="nx">auth</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//This function is made up for an example</span>
</span><span class='line'>  <span class="nx">checkAuth</span><span class="p">(</span><span class="nx">auth</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="k">break</span> <span class="nx">is_auth</span><span class="p">;</span> <span class="c1">//User auth passes</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//Code that would run if auth check failed</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Double for loop</h3>

<p>Ever tried to break out of an outer for loop from inside the inner for loop?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">is_matching</span><span class="o">:</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="mi">9</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="nx">j</span> <span class="o">==</span> <span class="mi">3</span><span class="p">)</span> <span class="k">break</span> <span class="nx">is_matching</span><span class="p">;</span> <span class="c1">//Breaks out of outer for loop, woo hoo!</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>While not always needed, break labels can be very handy to break out of deeply nested loops.</p>
]]></content>
  </entry>
  
</feed>
